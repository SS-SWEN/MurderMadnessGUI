class MurderMadness{
  
  GameState{
    
    PlayerTurn{
  
      NextPlayer{
        entry/ { report("Next players Turn"); }
        [playerInGame] nextPlayer -> RollDice;
      }
    
      RollDice{
        roll -> Move;
      }
      
      Move{
        [validMove()] move/ {report("Moving Player");} -> Move;
        [inEstate] moveToEstate -> inRoom;
      }
    
      inRoom{
        entry/{ report("Player now in an Estate"); }
        guessing /{ report("Choose Cards: "); } -> Guess;
        [solutionExists] accusing / {report("Choose solution: ")} -> Accuse;
      }
      
    }
    
    
    PlayerAction{
      
      PlayerGuessing{
        Guess{
           chooseCards/ {report("Choose Guess");} -> Refute;
        }
       
         Refute{
           [hasRefutation] refuted -> NextPlayer;
        }
      }
      
      
      Accuse{
        ChooseCards{
          [correct] -> Won;
          [incorrect] -> Lost;
        } 
      }
    }
    
    Won{
      entry/{report("Player has won game!");}
    }
    
    Lost{
      entry/{report("Player has lost the game");}
      [gameOngoing] -> PlayerTurn;
      }
    
    }
}//$?[End_of_model]$?

namespace -;

class MurderMadness
{
  position 50 30 109 45;
}

class MurderMadness
{
  position 50 30 109 45;
}